name: Release Russia blocked domains lists

on:
  workflow_dispatch:
  schedule:
    - cron: "45 20 * * *"

env:
  ANTIFILTER_URL: https://community.antifilter.download/list/domains.lst

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Set variables when running on schedule
        run: |
          echo "RELEASE_NAME=Released on $(date '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "TAG_NAME=$(date '+%Y%m%d')" >> $GITHUB_ENV
    
      - name: Checkout V2Ray/XRay domain list builder
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: geosite-builder

      - name: Checkout itdoginfo custom domain lists
        uses: actions/checkout@v4
        with:
          repository: itdoginfo/allow-domains
          path: itdoginfo-domains

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: geosite-builder/go.mod
          cache-dependency-path: geosite-builder/go.sum

      - name: Prepare working directories
        run: |
          mkdir src geosite-data release
          cp itdoginfo-domains/src/Russia-domains-inside.lst src/itdoginfo-inside.lst
          cp itdoginfo-domains/src/Russia-domains-outside.lst src/itdoginfo-outside.lst

      - name: Download antifilter community domains list
        run: |
          curl "$ANTIFILTER_URL" --output 'src/antifilter-community.lst' \
            --location --fail --no-progress-meter 

      - name: Prepare V2Ray/XRay domain lists
        run: |
          clean-up() { grep -v -e '^#' -e '^[[:space:]]*$' | sed 's/^www\.//' | sort | uniq; }
          cat src/antifilter-community.lst  | clean-up > geosite-data/antifilter-community
          cat src/itdoginfo-inside.lst      | clean-up > geosite-data/itdoginfo-inside
          cat src/itdoginfo-outside.lst     | clean-up > geosite-data/itdoginfo-outside
          cat src/itdoginfo-outside.lst     | clean-up > geosite-data/all-outside
          (cat src/antifilter-community.lst; \
          cat src/itdoginfo-inside.lst)     | clean-up > geosite-data/all

      - name: Build V2Ray/XRay geosite file
        working-directory: geosite-builder
        run: go run . -datapath '../geosite-data' --outputname 'ru-blocked.dat' --outputdir '../release'

      - name: Zip source files
        run: zip -9 --recurse-paths release/src-data.zip src/ geosite-data/

      - name: Calculate checksums
        working-directory: release
        run: for file in *; do sha256sum $file > $file.sha256sum; done

      - name: Download latest release
        uses: robinraju/release-downloader@v1.9
        continue-on-error: true
        with:
          latest: true
          fileName: '*'
          out-file-path: release-latest
          
      - name: Check for changes
        id: check-for-changes
        run: |
          for file in release/*.dat.sha256sum; do
            if ! cmp $file release-latest/$(basename $file)    ; then
              echo '### Changes found, releasing! :rocket:' >> $GITHUB_STEP_SUMMARY
              echo 'HAS_CHANGES=true' >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo '### No changes found, skipping release. :zzz:' >> $GITHUB_STEP_SUMMARY

      - name: Prepare release notes
        if: ${{ steps.check-for-changes.outputs.HAS_CHANGES }}
        shell: bash
        run: |
          list() { tr '\n' ',' | sed -e 's/,$// ; s/,/, /g'; }
          output() { tee -a RELEASE_NOTES $GITHUB_STEP_SUMMARY; }

          [ -d release-latest ] && (cd release-latest; unzip src-data.zip)

          cur_all=geosite-data/all
          pre_all=release-latest/geosite-data/all; [ -f $pre_all ] || pre_all=/dev/null
          total_count=$(cat $cur_all | wc -w | tr -d ' ')
          added_count=$(comm -13 $pre_all $cur_all | wc -w | tr -d ' ')
          removed_count=$(comm -23 $pre_all $cur_all | wc -w | tr -d ' ')

          echo -n "### Includes $total_count unique sites" | output
          if (( $added_count > 0 || $removed_count > 0 )); then
            echo -n " (" | output
            [[ $added_count > 0 ]] && echo -n "+$added_count" | output
            [[ $added_count > 0 && $removed_count > 0 ]] && echo -n ", " | output
            [[ $removed_count > 0 ]] && echo -n "-$removed_count" | output
            echo ")" | output
          fi

          for cur_file in $(GLOBIGNORE=*/all*; echo geosite-data/*); do
            name=$(basename $cur_file)
            pre_file=release-latest/geosite-data/$name
            [ -f $pre_file ] || pre_file=/dev/null

            total_count=$(cat $cur_file | wc -w | tr -d ' ')
            added=$(comm -13 $pre_file $cur_file)
            added_count=$(echo "$added" | wc -w | tr -d ' ')
            removed=$(comm -23 $pre_file $cur_file)
            removed_count=$(echo "$removed" | wc -w | tr -d ' ')

            echo -n "**$name â€“ $total_count sites**" | output
            if (( $added_count > 0 || $removed_count > 0 )); then
              echo -n " **(" | output
              (( $added_count > 0 )) && echo -n "+$added_count" | output
              (( $added_count > 0 && $removed_count > 0 )) && echo -n ", " | output
              (( $removed_count > 0 )) && echo -n "-$removed_count" | output
              echo "):**" | output

              if (( $added_count > 0 )); then
                echo -n "\+ " | output
                (( $added_count > 4 )) \
                  && (echo "$added" | head -n 3 | list; echo ", ...") | output \
                  || (echo "$added" | list; echo) | output
              fi
              if (( $removed_count > 0 )); then
                echo -n "\- " | output
                (( $removed_count > 4 )) \
                  && (echo "$removed" | head -n 3 | list; echo ", ...") | output \
                  || (echo "$removed" | list; echo) | output
              fi
            else
              echo | output
            fi
          done
          
      - name: Release
        if: ${{ steps.check-for-changes.outputs.HAS_CHANGES }}
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          body_path: RELEASE_NOTES
          files: release/*
