name: Release Russia blocked domains lists

on:
  workflow_dispatch:
  schedule:
    - cron: "45 20 * * *"

env:
  ANTIFILTER_URL: https://community.antifilter.download/list/domains.lst

jobs:
  build-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Set variables
        run: |
          echo "RELEASE_DATE=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "TAG_NAME=$(date '+%Y%m%d')" >> $GITHUB_ENV

      - name: Checkout codebase
        uses: actions/checkout@v4
    
      - name: Checkout V2Ray/XRay domain list builder
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: geosite-builder

      - name: Checkout itdoginfo custom domain lists
        uses: actions/checkout@v4
        with:
          repository: itdoginfo/allow-domains
          path: itdoginfo-domains

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: geosite-builder/go.mod
          cache-dependency-path: geosite-builder/go.sum

      - name: Prepare working directories
        run: mkdir src geosite-data release

      - name: Copy files
        run: |
          cp *.sh release/
          cp itdoginfo-domains/src/Russia-domains-inside.lst src/itdoginfo-inside.lst
          cp itdoginfo-domains/src/Russia-domains-outside.lst src/itdoginfo-outside.lst

      - name: Download antifilter community domains list
        run: |
          curl "$ANTIFILTER_URL" --output 'src/antifilter-community.lst' \
            --location --fail --silent --show-error --retry 3 --max-time 15

      - name: Build integral domain lists
        run: build/geosite-data src geosite-data

      - name: Build V2Ray/XRay geosite file
        working-directory: geosite-builder
        run: go run . -datapath '../geosite-data' --outputname 'ru-blocked.dat' --outputdir '../release'
        
      - name: Build Shadowrocket et al. configs
        run: build/configs "${{ env.RELEASE_DATE }}" geosite-data release

      - name: Calculate checksums
        working-directory: release
        run: for file in *.dat; do sha256sum $file > $file.sha256sum; done

      - name: Download latest release
        uses: robinraju/release-downloader@v1.9
        continue-on-error: true
        with:
          latest: true
          fileName: '*'
          out-file-path: release-latest
          
      - name: Check for changes
        id: check-for-changes
        run: |
          for file in release/*; do
            if ! cmp $file release-latest/$(basename $file)    ; then
              echo '### Changes found, releasing! :rocket:' >> $GITHUB_STEP_SUMMARY
              echo 'HAS_CHANGES=true' >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo '### No changes found, skipping release. :zzz:' >> $GITHUB_STEP_SUMMARY

      - name: Zip source files
        if: ${{ steps.check-for-changes.outputs.HAS_CHANGES }}
        run: zip -9 --recurse-paths release/src-data.zip src geosite-data

      - name: Prepare release notes
        if: ${{ steps.check-for-changes.outputs.HAS_CHANGES }}
        run: |
          [ -d release-latest ] && (cd release-latest; unzip src-data.zip);
          build/release-notes release-latest/geosite-data geosite-data RELEASE_NOTES $GITHUB_STEP_SUMMARY
          
      - name: Release
        if: ${{ steps.check-for-changes.outputs.HAS_CHANGES }}
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ format('Released on {0}', env.RELEASE_DATE) }}
          tag_name: ${{ env.TAG_NAME }}
          body_path: RELEASE_NOTES
          files: release/*
